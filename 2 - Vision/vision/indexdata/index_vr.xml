<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19"
        onstart="startup"
        logkey="false"
        bgcolor="#ffffff"
        projectfloorplanurl=""
        projecttitleid="project_title"
        projectdescriptionid="">


  <security cors="">
  </security>

  <krpano tour_firststartactiondone="false" tour_firstlittleplanet="false"/>
  <events name="startbehavioursevents" onxmlcomplete="startbehavioursxmlcompleteaction();" onloadcomplete="startLittlePlanetIntroEffect();" keep="true"/>

  <!-- generated by Panotour Pro V2.5.11 64bits : 30-04-2018 15-19-12 -->
  <!-- Project file : /Volumes/PROMISE PEGASUS/Video Work/UNI3034/Image/Kolor/UNISYS Pano 3.kpt -->
  <!-- Plugins and Spot Styles -->
  <include url="%FIRSTXML%/index_skin_vr.xml"/>
  <!-- Core actions -->
  <include url="%FIRSTXML%/index_core_vr.xml"/>
  <!-- Tour Messages -->
  <include url="%FIRSTXML%/index_messages_en.xml"/>

  <action name="startup">
    preloadSounds();

    if (s !== null, if (startscene === null OR startscene === "undefined", set(startscene, get(s));); );
    if (startscene === null OR startscene === "undefined",
      set(startscene, pano10);
    );
    if(startlanguage !== null AND startlanguage !== "undefined",
      set(tour_language, get(startlanguage));
    );
    if(starttime !== null AND starttime !== "undefined" AND starttime GT 0,
      set(videoscenestarttime, get(starttime));
    ,
      set(videoscenestarttime, 0);
    );
    if(scene[get(startscene)].full360,
    mainloadsceneStartup(get(startscene));
    if (h !== null,
      if (v !== null,
        if (f !== null,
          lookat(get(h), get(v), get(f));
         ,
          lookat(get(h), get(v));
        );
      ,
        if (f !== null,
          lookat(get(h), get(view.vlookat), get(f));
         ,
          lookat(get(h), get(view.vlookat));
        );
      );
    ,
      if (v !== null,
        if (f !== null,
          lookat(get(view.hlookat), get(v), get(f));
         ,
          lookat(get(view.hlookat), get(v));
        );
      ,
        if (f !== null,
          lookat(get(view.hlookat), get(view.vlookat), get(f));
        );
      );
    );
    );
  </action>

  <!-- 2 Groups -->

  <!-- Group Group 11 : 1 panoramas -->
  

<!-- **** @PanoName="panoTest" @PanoFile="/Volumes/PROMISE PEGASUS/Video Work/UNI3034/Image/Qt/Final Movies/final vr2.mp4" **** -->
<!-- **** Width="2048px" Height="1024px" **** -->
<scene name="pano10"
       heading="0"
       thumburl="%FIRSTXML%/panotest_10/thumbnail.jpg"

       backgroundsound="blank.mp3"
       backgroundsoundloops="1"
       haslocalsounds="false"
       haspolygons="false"
       titleid="pano10_title"
       descriptionid=""
       multires="false"
       planar="false"
       full360="true"
       video="true"
       onstart="pano10OnStart();"
       scenevideourl="%FIRSTXML%/panotest_10/final_vr2.mp4"
       scenevideolowresurl=""
       scenevideoloop="true"
       scenevideoposterurl="%FIRSTXML%/panotest_10/frame.jpg"
       scenevideolowresposterurl="%FIRSTXML%/panotest_10/framelowres.jpg"
       scenevideopausedonstart="false"
       hasiphonesound="false"
       scenevideomute="false"
       scenevideoendaction="false"
       seen="false">

    <autorotate horizon="-14.614200" tofov="74.380200" waittime="1" speed="5"/>


    <panoview h="-3.913200" v="-14.614200" fov="74.380200" hmin="-180" hmax="180" vmin="-90" vmax="90" fovmax="112.5" />

    <view fisheye="0"
          limitview="range"
          hlookatmin="-180"
          hlookatmax="180"
          vlookatmin="-90"
          vlookatmax="90"
          maxpixelzoom=""
          fovmin="60"
          fovtype="VFOV"
          fovmax="112.5"
          fov="74.380200"
          hlookat="-3.913200"
          vlookat="-14.614200"/>

    <preview url="%FIRSTXML%/panotest_10/preview.jpg" type="CUBESTRIP" striporder="FRBLUD" />


    <image hfov="360" vfov="180" devices="panovideosupport.and.no-html5.or.panovideosupport.and.html5.and.desktop.or.panovideosupport.and.html5.and.no-ie">
        <sphere url="plugin:ptvideosceneplayer" />
    </image>

<action name="pano10OnStart">
	if(videointerface_video,
		if(scene[get(xml.scene)].scenevideoloop,
			set(plugin[get(videointerface_video)].onvideocomplete, seek(0);play(););
		,
			if(scene[get(xml.scene)].scenevideoendaction == false,
				set(plugin[get(videointerface_video)].onvideocomplete, pause(););
			);
		);
		set(plugin[get(videointerface_video)].mute, get(scene[get(xml.scene)].scenevideomute));
		set(plugin[get(videointerface_video)].muted, get(scene[get(xml.scene)].scenevideomute));

    if(scene[get(xml.scene)].scenevideomute OR tour_soundson == false,
			set(plugin[get(videointerface_video)].volume, 0.0);
		,

			if(plugin[soundinterface] AND scene[get(xml.scene)].backgroundsound,
				pausebackgroundsound();
			);
			div(videovolume, tour_soundsvolume, 100);
			copy(plugin[get(videointerface_video)].volume, videovolume);
		);
		if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene),
			set(plugin[get(videointerface_video)].splashscreen, true);
		);
		if((device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene),
			set(scene[get(xml.scene)].scenevideopausedonstart, true);
		);
		if(device.panovideosupport == false OR (device.html5 AND device.ie AND device.mobile),
                        set(plugin[get(videointerface_video)].panovideo, false);
			set(plugin[get(videointerface_video)].width, 100%);
			set(plugin[get(videointerface_video)].height, prop);
			set(plugin[get(videointerface_video)].visible,true);
		,
                        set(plugin[get(videointerface_video)].panovideo, true);
			set(plugin[get(videointerface_video)].width, '');
			set(plugin[get(videointerface_video)].height, '');
			set(plugin[get(videointerface_video)].visible, false);
		);
		if(scene[get(xml.scene)].scenevideolowresurl != '' AND (device.html5 AND (device.mobile OR device.tablet OR device.safari)),
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideolowresurl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideolowresposterurl);
			set(current_videoscene_quality, 'low');
		,
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideourl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideoposterurl);
			set(current_videoscene_quality, 'high');
		);
		set(videoscene_url_found, false);
		txtsplit(get(current_videoscene_url), '|', arr_videoscene);
		for(set(scenevideoi,0), scenevideoi LT arr_videoscene.count, inc(scenevideoi),
			indexoftxt(indexval, get(arr_videoscene[get(scenevideoi)].value), 'indexdata/');
			if(indexval LT 0,
				txtadd(current_videoscene_url_update,'indexdata/',get(arr_videoscene[get(scenevideoi)].value));
				indexoftxt(indexval2, get(current_videoscene_url_update), get(plugin[get(videointerface_video)].videourl));
			,
				indexoftxt(indexval2, get(arr_videoscene[get(scenevideoi)].value), get(plugin[get(videointerface_video)].videourl));
			);
			if(indexval2 GE 0,
				set(videoscene_url_found, true);
			);
			delete(indexval,indexval2,current_videoscene_url_update);
		);
		ifnot(videoscene_url_found,
			if(plugin[get(videointerface_video)].issetup,
				stopdelayedcall(videointerface_video_call);
				plugin[get(videointerface_video)].playvideo(get(current_videoscene_url), get(current_videoscene_posterurl), get(scene[get(xml.scene)].scenevideopausedonstart), get(videoscenestarttime));
        set(videoscenestarttime, 0);
				set(scene[get(xml.scene)].scenevideopausedonstart, false);
				
				events.dispatch(videointerfaceactivated);
			,
				delayedcall(videointerface_videostart_call, 0.2, pano10OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
			);
		,
			if(plugin[get(videointerface_video)].videourl,
				if(plugin[get(videointerface_video)].isvideoready,
					stopdelayedcall(videointerface_video_call);

					events.dispatch(videointerfaceready);
					if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene),
						if(videointerface_autostart !== true,
              if(videoscenestarttime GT 0,
                plugin[get(videointerface_video)].seek(videoscenestarttime);
                set(videoscenestarttime, 0);
              );
							plugin[get(videointerface_video)].play();
							delayedcall(0,plugin[get(videointerface_video)].pause(););
						,
							plugin[get(videointerface_video)].pause();
						);
						set(scene[get(xml.scene)].scenevideopausedonstart, false);
					,
            if(videoscenestarttime GT 0,
              plugin[get(videointerface_video)].seek(videoscenestarttime);
              set(videoscenestarttime, 0);
            );
						plugin[get(videointerface_video)].play();
						ifnot(tour_firststartactiondone,
							plugin[get(videointerface_video)].pause();
						);
					);
				,
					delayedcall(videointerface_videostart_call, 0.2, pano10OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
				);
			);
		);
		set(videointerface_firstvideoscene, false);
		set(videointerface_autostart, true);
		events.dispatch(onvideointerfaceinit);
		delete(current_videoscene_url,current_videoscene_posterurl,videoscene_url_found,arr_videoscene);
	,
		delayedcall(videointerface_videostart_call, 0.1, pano10OnStart(););
	);
</action>





  <!-- **** 7 Point Spots **** -->

















  <hotspot name="spotpoint117"
           ath="9.720004" atv="-84.949902"
           style="IconDefaultPointSpotStyle"
           tag="point"
           distorted="true"
           depth="1000"
           descriptionid=""
           linktarget="pano148"
           onclick="onclickspotpoint117"
           />
  <hotspot name="spotpoint117" devices="flash" zorder="3"/>
  <hotspot name="spotpoint117" devices="html5" zorder="3" zorder2="1"/>
  <action name="onclickspotpoint117">
  
          mainloadscene(pano148);


  </action>









  <action name="hidepanopointspots">















    set(hotspot[spotpoint117].visible, false);






  </action>
  <action name="showpanopointspots">















  
  set(hotspot[spotpoint117].visible, true);






  </action>
  <events name="pano10stopanimatedspots" onremovepano="stopspotanimation(spotpoint117);" />


  <action name="showpanospotsaction">
    resumeTourSoundsActions(true,false,false,false,true);
    if (tour_displayspots,
    showpanopointspots();
    );
  </action>
  <action name="hidepanospotsaction">
    pauseTourSoundsActions(true,false,false,false,true);
    hidepanopointspots();
  </action>



</scene>


  <!-- Group Group 149 : 1 panoramas -->
  

<!-- **** @PanoName="final frontere" @PanoFile="/Volumes/PROMISE PEGASUS/Video Work/UNI3034/Image/Qt/Final Movies/final frontere.mp4" **** -->
<!-- **** Width="2048px" Height="1024px" **** -->
<scene name="pano148"
       heading="0"
       thumburl="%FIRSTXML%/final_frontere_148/thumbnail.jpg"

       backgroundsound="blank.mp3"
       backgroundsoundloops="1"
       haslocalsounds="false"
       haspolygons="false"
       titleid="pano148_title"
       descriptionid=""
       multires="false"
       planar="false"
       full360="true"
       video="true"
       onstart="pano148OnStart();"
       scenevideourl="%FIRSTXML%/final_frontere_148/final_frontere.mp4"
       scenevideolowresurl=""
       scenevideoloop="true"
       scenevideoposterurl="%FIRSTXML%/final_frontere_148/frame.jpg"
       scenevideolowresposterurl="%FIRSTXML%/final_frontere_148/framelowres.jpg"
       scenevideopausedonstart="false"
       hasiphonesound="false"
       scenevideomute="false"
       scenevideoendaction="false"
       seen="false">

    <autorotate horizon="-2.240897" tofov="108.900000" waittime="0" speed="5"/>


    <panoview h="-123.066547" v="-2.240897" fov="108.900000" hmin="-180" hmax="180" vmin="-90" vmax="90" fovmax="108.90000000000002" />

    <view fisheye="0"
          limitview="range"
          hlookatmin="-180"
          hlookatmax="180"
          vlookatmin="-90"
          vlookatmax="90"
          maxpixelzoom=""
          fovmin="108.90000000000002"
          fovtype="VFOV"
          fovmax="108.90000000000002"
          fov="108.900000"
          hlookat="-123.066547"
          vlookat="-2.240897"/>

    <preview url="%FIRSTXML%/final_frontere_148/preview.jpg" type="CUBESTRIP" striporder="FRBLUD" />


    <image hfov="360" vfov="180" devices="panovideosupport.and.no-html5.or.panovideosupport.and.html5.and.desktop.or.panovideosupport.and.html5.and.no-ie">
        <sphere url="plugin:ptvideosceneplayer" />
    </image>

<action name="pano148OnStart">
	if(videointerface_video,
		if(scene[get(xml.scene)].scenevideoloop,
			set(plugin[get(videointerface_video)].onvideocomplete, seek(0);play(););
		,
			if(scene[get(xml.scene)].scenevideoendaction == false,
				set(plugin[get(videointerface_video)].onvideocomplete, pause(););
			);
		);
		set(plugin[get(videointerface_video)].mute, get(scene[get(xml.scene)].scenevideomute));
		set(plugin[get(videointerface_video)].muted, get(scene[get(xml.scene)].scenevideomute));

    if(scene[get(xml.scene)].scenevideomute OR tour_soundson == false,
			set(plugin[get(videointerface_video)].volume, 0.0);
		,

			if(plugin[soundinterface] AND scene[get(xml.scene)].backgroundsound,
				pausebackgroundsound();
			);
			div(videovolume, tour_soundsvolume, 100);
			copy(plugin[get(videointerface_video)].volume, videovolume);
		);
		if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene),
			set(plugin[get(videointerface_video)].splashscreen, true);
		);
		if((device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene),
			set(scene[get(xml.scene)].scenevideopausedonstart, true);
		);
		if(device.panovideosupport == false OR (device.html5 AND device.ie AND device.mobile),
                        set(plugin[get(videointerface_video)].panovideo, false);
			set(plugin[get(videointerface_video)].width, 100%);
			set(plugin[get(videointerface_video)].height, prop);
			set(plugin[get(videointerface_video)].visible,true);
		,
                        set(plugin[get(videointerface_video)].panovideo, true);
			set(plugin[get(videointerface_video)].width, '');
			set(plugin[get(videointerface_video)].height, '');
			set(plugin[get(videointerface_video)].visible, false);
		);
		if(scene[get(xml.scene)].scenevideolowresurl != '' AND (device.html5 AND (device.mobile OR device.tablet OR device.safari)),
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideolowresurl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideolowresposterurl);
			set(current_videoscene_quality, 'low');
		,
			copy(current_videoscene_url, scene[get(xml.scene)].scenevideourl);
			copy(current_videoscene_posterurl, scene[get(xml.scene)].scenevideoposterurl);
			set(current_videoscene_quality, 'high');
		);
		set(videoscene_url_found, false);
		txtsplit(get(current_videoscene_url), '|', arr_videoscene);
		for(set(scenevideoi,0), scenevideoi LT arr_videoscene.count, inc(scenevideoi),
			indexoftxt(indexval, get(arr_videoscene[get(scenevideoi)].value), 'indexdata/');
			if(indexval LT 0,
				txtadd(current_videoscene_url_update,'indexdata/',get(arr_videoscene[get(scenevideoi)].value));
				indexoftxt(indexval2, get(current_videoscene_url_update), get(plugin[get(videointerface_video)].videourl));
			,
				indexoftxt(indexval2, get(arr_videoscene[get(scenevideoi)].value), get(plugin[get(videointerface_video)].videourl));
			);
			if(indexval2 GE 0,
				set(videoscene_url_found, true);
			);
			delete(indexval,indexval2,current_videoscene_url_update);
		);
		ifnot(videoscene_url_found,
			if(plugin[get(videointerface_video)].issetup,
				stopdelayedcall(videointerface_video_call);
				plugin[get(videointerface_video)].playvideo(get(current_videoscene_url), get(current_videoscene_posterurl), get(scene[get(xml.scene)].scenevideopausedonstart), get(videoscenestarttime));
        set(videoscenestarttime, 0);
				set(scene[get(xml.scene)].scenevideopausedonstart, false);
				
				events.dispatch(videointerfaceactivated);
			,
				delayedcall(videointerface_videostart_call, 0.2, pano148OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
			);
		,
			if(plugin[get(videointerface_video)].videourl,
				if(plugin[get(videointerface_video)].isvideoready,
					stopdelayedcall(videointerface_video_call);

					events.dispatch(videointerfaceready);
					if(scene[get(xml.scene)].scenevideopausedonstart OR (device.android AND videointerface_firstvideoscene) OR (device.iphone AND videointerface_firstvideoscene),
						if(videointerface_autostart !== true,
              if(videoscenestarttime GT 0,
                plugin[get(videointerface_video)].seek(videoscenestarttime);
                set(videoscenestarttime, 0);
              );
							plugin[get(videointerface_video)].play();
							delayedcall(0,plugin[get(videointerface_video)].pause(););
						,
							plugin[get(videointerface_video)].pause();
						);
						set(scene[get(xml.scene)].scenevideopausedonstart, false);
					,
            if(videoscenestarttime GT 0,
              plugin[get(videointerface_video)].seek(videoscenestarttime);
              set(videoscenestarttime, 0);
            );
						plugin[get(videointerface_video)].play();
						ifnot(tour_firststartactiondone,
							plugin[get(videointerface_video)].pause();
						);
					);
				,
					delayedcall(videointerface_videostart_call, 0.2, pano148OnStart();add(plugin[get(videointerface_video)].delay, 0.2););
				);
			);
		);
		set(videointerface_firstvideoscene, false);
		set(videointerface_autostart, true);
		events.dispatch(onvideointerfaceinit);
		delete(current_videoscene_url,current_videoscene_posterurl,videoscene_url_found,arr_videoscene);
	,
		delayedcall(videointerface_videostart_call, 0.1, pano148OnStart(););
	);
</action>







</scene>


  <krpano nofullspherepanoavailable="false" />


  <!-- Awake HTML5 plugins -->
  <events name="eventKrpanoLoadedEvts" onxmlcomplete="eventKrpanoLoadedAction();" keep="true" />
  <action name="eventKrpanoLoadedAction">
    
    set(events[eventKrpanoLoadedEvts].name, null);
    js(eventKrpanoLoaded('webvr'));
  </action>

</krpano>

